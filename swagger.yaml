openapi: 3.0.0
servers:
  - description: Azura Voyage Vila Reservation
    url: https://fullstak-vila-reservation.vercel.app/api
  # Added by API Auto Mocking Plugin
  # - description: SwaggerHub API Auto Mocking
  #   url: https://virtserver.swaggerhub.com/OFIEISRANTA_1/azuravoyage/1.0.0
info:
  description: API for villa reservation
  version: "1.0.0"
  title: Azura Voyage API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  # - name: admins
  #   description: Secured Admin-only calls
  # - name: developers
  #   description: Operations available to regular developers
  - name: authentication
    description: API for authentication
  - name: dashboard
    description: API for admin's dashboard
  - name: mobile
    description: API for mobile apps
paths:
  /auth/login:
    post:
      tags:
        - authentication
      summary: login to apps
      description: |
       Login to web apps as admin or to mobile apps as user.
      responses:
        '200':
          description: Admin login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                required:
                  - message
                  - token
        '201':
          description: User login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  email:
                    type: string
                  fullname:
                    type: string
                  image:
                    type: string
                  nickname:
                    type: string
                  phone_number:
                    type: string
                required:
                  - message
                  - token
                  - email
                  - fullname
                  - image
                  - nickname
                  - phone_number
        '400':
          $ref: '#/components/responses/BadInputParams'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                loginType:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required: 
                - loginType
                - email
                - password
  # /auth/logout:
  #   post:
  #     tags:
  #       - authentication
  #     summary: logout from apps
  #     responses:
  #       '200':
  #         description: Logout success
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 message:
  #                   type: string
  #               required:
  #                 - message
  /auth/registeruser:
    post:
      tags:
        - authentication
      summary: register new account
      description: |
        Register new user account for mobile apps
      responses:
        '201':
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  email:
                    type: string
                  fullname:
                    type: string
                  image:
                    type: string
                  nickname:
                    type: string
                  phone_number:
                    type: string
        '400':
          $ref: '#/components/responses/BadInputParams'
        '409':
          description: Email already in use
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required: 
                - email
                - password
  /auth/registeruserprof:
    post:
      tags:
        - authentication
      summary: complete profile
      description: |
        Complete profile for newly registered account
      security: 
        - bearerAuth: []
      responses:
        '201':
          description: Profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  filename:
                    type: string
        '404':
          description: Profile update failed
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                nickname:
                  type: string
                image:
                  type: string
                  format: binary
                phone_number:
                  type: string
              required: 
                - fullname
                - nickname
                - image
                - phone_number
  /auth/updatepwd:
    post:
      tags:
        - authentication
      summary: change password
      description: |
        Change password for user account
      responses:
        '201':
          description: Password updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          $ref: '#/components/responses/BadInputParams'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                newpassword:
                  type: string
              required: 
                - email
                - newpassword
  
  /dashboard:
    get:
      tags:
        - dashboard
      summary: dashboard's main page
      description: |
        Get required data to shown in the main page of admin's dashboard
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Main page data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  nCheckIn:
                    type: integer
                  nCheckOut:
                    type: integer
                  nVila:
                    type: integer
                  nAvailVila:
                    type: integer
                  notAvailVila:
                    type: integer
                  users:
                    type: object
                  rateReview:
                    type: number
        '500':
          $ref: '#/components/responses/ServerError'
  /dashboard/vila:
    get:
      tags:
        - dashboard
      summary: list of villas
      description: |
        Get all vilas data in databases
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Main page data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  vilas:
                    type: object
        '500':
          $ref: '#/components/responses/ServerError'
  /dashboard/createvila:
    post:
      tags:
        - dashboard
      summary: create new villa
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Creating vila is success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/BadInputParams'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: string
                description:
                  type: string
                location:
                  type: string
                latitude:
                  type: string
                longitude:
                  type: string
                images:
                  type: string
                facilities:
                  type: string
              required: 
                - name
                - price
                - description
                - location
                - images
                - facilities
  /dashboard/editvila:
    post:
      tags:
        - dashboard
      summary: edit a villa
      security: 
        - bearerAuth: []
      responses:
        '201':
          description: Updating vila is success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          $ref: '#/components/responses/BadInputParams'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                vilaId:
                  type: integer
                name:
                  type: string
                price:
                  type: string
                description:
                  type: string
                location:
                  type: string
                latitude:
                  type: string
                longitude:
                  type: string
                images:
                  type: string
                facilities:
                  type: string
              required: 
                - vilaId
  /dashboard/deletevila:
    post:
      tags:
        - dashboard
      summary: delete a villa
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Deleting vila is success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                vilaId:
                  type: integer
              required: 
                - vilaId
  
  /mobile:
    get:
      tags:
        - mobile
      summary: mobile's home page
      description: |
        Get required data to shown in the home page for mobile apps
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Home page
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userData:
                    type: object
                  allVilas:
                    type: object
                  recommendVilas:
                    type: object
                  popularVilas:
                    type: object
                  ratingVilas:
                    type: object
        '500':
          $ref: '#/components/responses/ServerError'
  /mobile/search:
    get:
      tags:
        - mobile
      summary: list of specified villa
      description: |
        Get list of villas filtered by the name of a villa.
      security: 
        - bearerAuth: []
      parameters:
        - in: query
          name: searchText
          description: villa's name to be searched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Home page
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userData:
                    type: object
                  allVilas:
                    type: object
                  recommendVilas:
                    type: object
                  popularVilas:
                    type: object
                  ratingVilas:
                    type: object
        '500':
          $ref: '#/components/responses/ServerError'
  /mobile/vila/{id}:
    get:
      tags:
        - mobile
      summary: villa by id
      description: |
        Get a villa data by id
      security: 
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          description: villa id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Main page data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  vila:
                    type: object
        '500':
          $ref: '#/components/responses/ServerError'
  /mobile/viladate/{id}:
    get:
      tags:
        - mobile
      summary: villa transaction by id
      description: |
        Get all villa transaction data by villa id
      security: 
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          description: villa id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Main page data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  transactions:
                    type: object
        '500':
          $ref: '#/components/responses/ServerError'
  /mobile/calculate:
    post:
      tags:
        - mobile
      summary: calculate payment
      description: |
        Calculating all data in payment for a villa
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Calculating all data
          content:
            application/json:
              schema:
                type: object
                properties:
                  vila:
                    type: string
                  taxes:
                    type: integer
                  night:
                    type: integer
                  total:
                    type: integer
                  tglCheckin:
                    type: string
                    format: date
                  tglCheckout:
                    type: string
                    format: date
        '404':
          $ref: '#/components/responses/BadInputParams'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                vilaId:
                  type: integer
                nNight:
                  type: integer
                tglCheckin:
                  type: string
                  format: date
                tglCheckout:
                  type: string
                  format: date
              required: 
                - vilaId
                - nNight
                - tglCheckin
                - tglCheckout
  /mobile/pg:
    post:
      tags:
        - mobile
      summary: send to payment gateway
      description: |
        Send data to payment gateway and retrieve url
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Retrieve transaction token and url 
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  transaction_token:
                    type: string
                  transaction_url:
                    type: string
        '404':
          $ref: '#/components/responses/BadInputParams'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                vilaId:
                  type: integer
                nNight:
                  type: integer
                tglCheckin:
                  type: string
                  format: date
                tglCheckout:
                  type: string
                  format: date
              required: 
                - vilaId
                - nNight
                - tglCheckin
                - tglCheckout
  /mobile/review:
    post:
      tags:
        - mobile
      summary: send review
      description: |
        Send a review after transaction
      security: 
        - bearerAuth: []
      responses:
        '201':
          description: Review is success or fail 
        '400':
          description: Cannot edit other's review
        '404':
          $ref: '#/components/responses/BadInputParams'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  type: string
                score:
                  type: integer
                transactionId:
                  type: integer
                  format: date
              required: 
                - description
                - score
                - transactionId
  /mobile/bookmark:
    get:
      tags:
        - mobile
      summary: list of all bookmarked villa
      description: |
        List of all villa bookmarked by the user.
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Bookmarked villas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  bookmarkedVila:
                    type: object
        '500':
          $ref: '#/components/responses/ServerError'
  /mobile/dobookmark:
    post:
      tags:
        - mobile
      summary: do or undo bookmark
      description: |
        Toggle api for do/undo bookmark a villa
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: Do / undo bookmark is success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Do / undo bookmark is failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                vilaId:
                  type: integer
              required: 
                - vilaId
  /mobile/history:
    get:
      tags:
        - mobile
      summary: list of all transaction history
      description: |
        List of all villa bookmarked by the user.
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: all transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  allTransactions:
                    type: object
        '500':
          $ref: '#/components/responses/ServerError'
  /mobile/history/search:
    get:
      tags:
        - mobile
      summary: list of specified transactions
      description: |
        Get list of all transactions filtered by the name of a villa.
      security: 
        - bearerAuth: []
      parameters:
        - in: query
          name: searchText
          description: villa's name to be searched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: all transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  allTransactions:
                    type: object
        '500':
          $ref: '#/components/responses/ServerError'
  /mobile/history/specific/{id}:
    get:
      tags:
        - mobile
      summary: transaction history by id
      description: |
        Get a transaction history by transaction id
      security: 
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          description: transaction id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Transaction history data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  tgl_checkin:
                    type: string
                    format: date
                  tgl_checkout:
                    type: string
                    format: date
                  full_name:
                    type: string
                  n_guest:
                    type: integer
                  total_price:
                    type: integer
                  taxes:
                    type: integer
                  vila_name:
                    type: string
                  vila_price:
                    type: integer
                  vila_location:
                    type: string
                  vila_image:
                    type: string
                  is_bookmark:
                    type: boolean
                  transaction_status:
                    type: integer
                  review_user_id:
                    type: integer
                  review_score:
                    type: integer
        '404':
          $ref: '#/components/responses/BadInputParams'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
        tags:
          - mobile
        summary: pay or cancel
        description: |
          Pay or cancel a transaction
        security: 
          - bearerAuth: []
        parameters: 
          - in: path
            name: id
            description: transaction id
            required: true
            schema:
              type: integer
        responses:
          '201':
            description: Transaction status changed
          '400':
            description: Cannot edit others status
          '401':
            description: Cannot change status
          '404':
            $ref: '#/components/responses/BadInputParams'
          '500':
            $ref: '#/components/responses/ServerError'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionType:
                    type: string
                required: 
                  - transactionType
  /mobile/profile:
    get:
      tags:
        - mobile
      summary: user data
      description: |
        Get user data for profile page
      security: 
        - bearerAuth: []
      responses:
        '200':
          description: all transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  nickname:
                    type: string
                  fullname:
                    type: string
                  email:
                    type: string
                  image:
                    type: string
        '500':
          $ref: '#/components/responses/ServerError'
      
      
  # /inventory:
  #   get:
  #     tags:
  #       - developers
  #     summary: searches inventory
  #     operationId: searchInventory
  #     description: |
  #       By passing in the appropriate options, you can search for
  #       available inventory in the system
  #     parameters:
  #       - in: query
  #         name: searchString
  #         description: pass an optional search string for looking up inventory
  #         required: false
  #         schema:
  #           type: string
  #       - in: query
  #         name: skip
  #         description: number of records to skip for pagination
  #         schema:
  #           type: integer
  #           format: int32
  #           minimum: 0
  #       - in: query
  #         name: limit
  #         description: maximum number of records to return
  #         schema:
  #           type: integer
  #           format: int32
  #           minimum: 0
  #           maximum: 50
  #     responses:
  #       '200':
  #         description: search results matching criteria
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/InventoryItem'
  #       '400':
  #         description: bad input parameter
  #   post:
  #     tags:
  #       - admins
  #     summary: adds an inventory item
  #     operationId: addInventory
  #     description: Adds an item to the system
  #     responses:
  #       '201':
  #         description: item created
  #       '400':
  #         description: 'invalid input, object invalid'
  #       '409':
  #         description: an existing item already exists
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/InventoryItem'
  #       description: Inventory item to add
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadInputParams:
      description: Bad input parameter
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
    ServerError:
      description: An internal server error occurred
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  # schemas:
    # InventoryItem:
    #   type: object
    #   required:
    #     - id
    #     - name
    #     - manufacturer
    #     - releaseDate
    #   properties:
    #     id:
    #       type: string
    #       format: uuid
    #       example: d290f1ee-6c54-4b01-90e6-d701748f0851
    #     name:
    #       type: string
    #       example: Widget Adapter
    #     releaseDate:
    #       type: string
    #       format: date-time
    #       example: '2016-08-29T09:12:33.001Z'
    #     manufacturer:
    #       $ref: '#/components/schemas/Manufacturer'
    # Manufacturer:
    #   required:
    #     - name
    #   properties:
    #     name:
    #       type: string
    #       example: ACME Corporation
    #     homePage:
    #       type: string
    #       format: url
    #       example: 'https://www.acme-corp.com'
    #     phone:
    #       type: string
    #       example: 408-867-5309
    #   type: object